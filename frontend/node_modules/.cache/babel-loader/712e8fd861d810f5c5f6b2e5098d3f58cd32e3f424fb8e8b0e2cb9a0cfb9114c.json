{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairi\\\\OneDrive\\\\Desktop\\\\miniproject implementation\\\\frontend\\\\src\\\\components\\\\DataDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./DataDisplay.css\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = ({\n  data = [],\n  entity = \"Data\"\n}) => {\n  _s();\n  const [isTableView, setIsTableView] = useState(false);\n  const toggleView = () => setIsTableView(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [entity, \" Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-btn\",\n      onClick: toggleView,\n      children: isTableView ? \"Show Bullet Points\" : \"Show Table Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this) : isTableView ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(data[0] || {}).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key.replace(/_/g, \" \").toUpperCase()\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(item).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: String(value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bullet-list\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bullet-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name || `Faculty ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(item).map(([key, value], idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key.replace(/_/g, \" \").replace(/\\b\\w/g, c => c.toUpperCase()), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: String(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 1\n  }, this);\n};\n_s(DataDisplay, \"ymOE9K7kV2S9a3ziwok9cmn0WMo=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxDEV","_jsxDEV","DataDisplay","data","entity","_s","isTableView","setIsTableView","toggleView","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","Object","keys","map","key","index","replace","toUpperCase","item","values","value","idx","String","name","entries","c","_c","$RefreshReg$"],"sources":["C:/Users/sairi/OneDrive/Desktop/miniproject implementation/frontend/src/components/DataDisplay.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./DataDisplay.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst DataDisplay = ({ data = [], entity = \"Data\" }) => {\r\nconst [isTableView, setIsTableView] = useState(false);\r\n\r\nconst toggleView = () => setIsTableView((prev) => !prev);\r\n\r\nreturn (\r\n<div className=\"data-container\">\r\n    <h2>{entity} Details</h2>\r\n    <button className=\"toggle-btn\" onClick={toggleView}>\r\n    {isTableView ? \"Show Bullet Points\" : \"Show Table Format\"}\r\n    </button>\r\n\r\n    {data.length === 0 ? (\r\n    <p>No data available.</p>\r\n    ) : isTableView ? (\r\n    <table className=\"data-table\">\r\n        <thead>\r\n        <tr>\r\n            {Object.keys(data[0] || {}).map((key, index) => (\r\n            <th key={index}>{key.replace(/_/g, \" \").toUpperCase()}</th>\r\n            ))}\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.map((item, index) => (\r\n            <tr key={index}>\r\n            {Object.values(item).map((value, idx) => (\r\n                <td key={idx}>{String(value)}</td>\r\n            ))}\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n    </table>\r\n    ) : (\r\n    <div className=\"bullet-list\">\r\n        {data.map((item, index) => (\r\n        <div key={index} className=\"bullet-item\">\r\n            <h3>{item.name || `Faculty ${index + 1}`}</h3>\r\n            <ul>\r\n            {Object.entries(item).map(([key, value], idx) => (\r\n                <li key={idx}>\r\n                <strong>{key.replace(/_/g, \" \").replace(/\\b\\w/g, (c) => c.toUpperCase())}:</strong>{\" \"}\r\n                <ReactMarkdown>{String(value)}</ReactMarkdown>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n        ))}\r\n    </div>\r\n    )}\r\n</div>\r\n);\r\n};\r\n\r\nexport default DataDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}