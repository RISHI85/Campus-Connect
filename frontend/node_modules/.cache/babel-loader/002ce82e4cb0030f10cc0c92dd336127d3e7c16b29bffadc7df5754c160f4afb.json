{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairi\\\\OneDrive\\\\Desktop\\\\miniproject implementation\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\";\nconst USER_NAME = \"Rishi\"; // Replace with dynamic username if available\n\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [showHistory, setShowHistory] = useState(false); // Toggle history panel\n  const navigate = useNavigate();\n  const messagesEndRef = useRef(null);\n\n  // Scroll to the bottom whenever messages update\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    const fetchChatHistory = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/chat-history`);\n        setMessages(response.data.history || []);\n      } catch (error) {\n        console.error(\"❌ Error fetching chat history:\", error);\n      }\n    };\n    fetchChatHistory();\n  }, []);\n  const handleUserInput = async e => {\n    e.preventDefault();\n    if (!userInput.trim()) return;\n    const userMessage = {\n      text: userInput,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    try {\n      const res = await axios.post(`${API_URL}/chat`, {\n        query: userInput\n      });\n      console.log(\"📊 API Response:\", res.data);\n      let botMessageText = res.data.message || \"No response from the bot.\";\n\n      // Ensure we only show a user-friendly response, not JSON\n      if (res.data.friendlyResponse) {\n        botMessageText = res.data.friendlyResponse; // Use formatted response if available\n      }\n      const botMessage = {\n        text: botMessageText,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"❌ Error communicating with chatbot:\", error);\n      setMessages(prev => [...prev, {\n        text: \"Oops! Something went wrong. Please try again.\",\n        sender: 'bot'\n      }]);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  return (\n    /*#__PURE__*/\n    // <div className={`chat-container ${showHistory ? \"history-open\" : \"\"}`}>\n    //     {/* Chat History Panel */}\n    //     <div className={`chat-history ${showHistory ? \"show\" : \"\"}`}>\n    //         <button className=\"toggle-history-btn\" onClick={() => setShowHistory(!showHistory)}>\n    //             🕘\n    //         </button>\n    //         {showHistory && <h3>Chat History</h3>}\n    //         {showHistory &&\n    //             messages.filter(msg => msg.sender === \"user\").map((msg, index) => (\n    //                 <div key={index} className=\"history-message\">\n    //                     {msg.text}\n    //                 </div>\n    //             ))}\n    //     </div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome, \", USER_NAME]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"logout-button\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), msg.rawData && /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"message-data\",\n              children: JSON.stringify(msg.rawData, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUserInput,\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            placeholder: \"Ask me anything...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Chatbot, \"3Y9dObg+J1rp45ILmpR/O+I+tPw=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","jsxDEV","_jsxDEV","API_URL","USER_NAME","Chatbot","_s","messages","setMessages","userInput","setUserInput","showHistory","setShowHistory","navigate","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchChatHistory","response","get","data","history","error","console","handleUserInput","e","preventDefault","trim","userMessage","text","sender","prev","res","post","query","log","botMessageText","message","friendlyResponse","botMessage","handleLogout","localStorage","removeItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","rawData","JSON","stringify","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sairi/OneDrive/Desktop/miniproject implementation/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './home.css';\r\n\r\nconst API_URL = \"http://localhost:5000\";\r\nconst USER_NAME = \"Rishi\"; // Replace with dynamic username if available\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [showHistory, setShowHistory] = useState(false); // Toggle history panel\r\n    const navigate = useNavigate();\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n    // Scroll to the bottom whenever messages update\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        const fetchChatHistory = async () => {\r\n            try {\r\n                const response = await axios.get(`${API_URL}/chat-history`);\r\n                setMessages(response.data.history || []);\r\n            } catch (error) {\r\n                console.error(\"❌ Error fetching chat history:\", error);\r\n            }\r\n        };\r\n        fetchChatHistory();\r\n    }, []);\r\n\r\n    const handleUserInput = async (e) => {\r\n        e.preventDefault();\r\n        if (!userInput.trim()) return;\r\n\r\n        const userMessage = { text: userInput, sender: 'user' };\r\n        setMessages((prev) => [...prev, userMessage]);\r\n        setUserInput('');\r\n\r\n        try {\r\n            const res = await axios.post(`${API_URL}/chat`, { query: userInput });\r\n            console.log(\"📊 API Response:\", res.data);\r\n\r\n            let botMessageText = res.data.message || \"No response from the bot.\";\r\n\r\n        // Ensure we only show a user-friendly response, not JSON\r\n        if (res.data.friendlyResponse) {\r\n            botMessageText = res.data.friendlyResponse; // Use formatted response if available\r\n        }\r\n\r\n        const botMessage = {\r\n            text: botMessageText,\r\n            sender: 'bot'\r\n        };\r\n\r\n        setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n        console.error(\"❌ Error communicating with chatbot:\", error);\r\n        setMessages((prev) => [...prev, { text: \"Oops! Something went wrong. Please try again.\", sender: 'bot' }]);\r\n    }\r\n};\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        // <div className={`chat-container ${showHistory ? \"history-open\" : \"\"}`}>\r\n        //     {/* Chat History Panel */}\r\n        //     <div className={`chat-history ${showHistory ? \"show\" : \"\"}`}>\r\n        //         <button className=\"toggle-history-btn\" onClick={() => setShowHistory(!showHistory)}>\r\n        //             🕘\r\n        //         </button>\r\n        //         {showHistory && <h3>Chat History</h3>}\r\n        //         {showHistory &&\r\n        //             messages.filter(msg => msg.sender === \"user\").map((msg, index) => (\r\n        //                 <div key={index} className=\"history-message\">\r\n        //                     {msg.text}\r\n        //                 </div>\r\n        //             ))}\r\n        //     </div>\r\n        <div>\r\n            {/* Main Chat Section */}\r\n            <div className=\"chat-box\">\r\n                <header className=\"chat-header\">\r\n                    <h1>Welcome, {USER_NAME}</h1>\r\n                    <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n                </header>\r\n\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.sender}`}>\r\n                            <div className=\"message-text\">{msg.text}</div>\r\n                            {msg.rawData && (\r\n                                <pre className=\"message-data\">{JSON.stringify(msg.rawData, null, 2)}</pre>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                    <div ref={messagesEndRef}></div>\r\n                </div>\r\n\r\n                <form onSubmit={handleUserInput} className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userInput}\r\n                        onChange={(e) => setUserInput(e.target.value)}\r\n                        placeholder=\"Ask me anything...\"\r\n                    />\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}