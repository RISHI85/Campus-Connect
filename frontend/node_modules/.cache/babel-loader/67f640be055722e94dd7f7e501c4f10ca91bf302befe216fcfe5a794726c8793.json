{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairi\\\\OneDrive\\\\Desktop\\\\miniproject implementation\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport nlp from 'compromise'; //chat history topics\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown'; //text bold,etc\nimport axios from 'axios'; //making API requests to your backend.\nimport './home.css';\nimport Navbar from './navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [showHistory, setShowHistory] = useState(false); // chathitory open or not\n  const messagesEndRef = useRef(null); //Ref to bottom of messages — used for scroll to bottom.\n  const messageRefs = useRef([]);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  console.log(\"user name is\", username);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // Scroll to the bottom whenever messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (!token) {\n      navigate(\"/login\");\n    }\n  }, [token, navigate]);\n\n  // 🔹 Load chat history from localStorage when component mounts\n  const userId = localStorage.getItem(\"userEmail\") || \"guest\"; // Or however you store identity\n\n  useEffect(() => {\n    try {\n      const storedMessages = localStorage.getItem(`chatMessages_${userId}`);\n      if (storedMessages) {\n        setMessages(JSON.parse(storedMessages));\n      }\n    } catch (error) {\n      console.error(\"❌ Error loading chat history:\", error);\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (messages.length > 0) {\n      localStorage.setItem(`chatMessages_${userId}`, JSON.stringify(messages));\n    }\n  }, [messages, userId]);\n  const handleUserInput = async e => {\n    e.preventDefault();\n    if (!userInput.trim()) return;\n    const userMessage = {\n      text: userInput,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setUserInput('');\n    try {\n      const res = await axios.post(`${API_URL}/chat`, {\n        query: userInput\n      });\n      console.log(\"📊 API Response:\", res.data);\n      let botMessageText = res.data.message || \"No response from the bot.\";\n      if (Array.isArray(res.data.listResponse)) {\n        // Convert response to bullet points\n        botMessageText = \"<ul>\" + res.data.listResponse.map(item => `<li>${item}</li>`).join('') + \"</ul>\";\n      }\n\n      // Ensure we only show a user-friendly response, not JSON\n      if (res.data.friendlyResponse) {\n        botMessageText = res.data.friendlyResponse; // Use formatted response if available\n      }\n      const botMessage = {\n        text: botMessageText,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"❌ Error communicating with chatbot:\", error);\n      setMessages(prev => [...prev, {\n        text: \"Oops! Something went wrong. Please try again.\",\n        sender: 'bot'\n      }]);\n    }\n  };\n  const scrollToMessage = index => {\n    if (messageRefs.current[index]) {\n      messageRefs.current[index].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  };\n  const handleHistoryClick = index => {\n    scrollToMessage(index); // Scroll to the clicked message in the chat\n  };\n  useEffect(() => {\n    const response = async () => {\n      const ans = await axios.get(`http://localhost:5000/chat-history/${username}`);\n      //setMessages(JSON.parse(ans));\n      console.log(\"answer is \", ans);\n      console.log(\"the answer issss\", ans.data);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-container ${showHistory ? \"history-open\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-history ${showHistory ? \"show\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), messages.filter((msg, index, self) => msg.sender === \"user\" && self.findIndex(m => m.text === msg.text && m.sender === \"user\") === index).map((msg, index) => {\n        const lower = msg.text.toLowerCase();\n\n        // --- Manual Rules First ---\n        let shortText = \"\";\n        if (lower.includes(\"fee structure\") && lower.includes(\"it\")) shortText = \"Fee: IT\";else if (lower.includes(\"fee structure\") && lower.includes(\"cs\")) shortText = \"Fee: CS\";else if (lower.includes(\"fee structure\")) shortText = \"Fee Structure\";else if (lower.includes(\"student\")) shortText = \"Student Info\";else if (lower.includes(\"faculty\")) shortText = \"Faculty Info\";else if (lower.includes(\"event\")) shortText = \"Event Info\";else if (lower.includes(\"details\") && lower.includes(\"all\")) shortText = \"All Details\";\n\n        // --- If no match, use Compromise NLP fallback ---\n        if (!shortText) {\n          const doc = nlp(msg.text);\n          const topic = doc.nouns().out('text') || doc.verbs().out('text') || msg.text.split(\" \").slice(0, 4).join(\" \");\n          shortText = topic ? topic.charAt(0).toUpperCase() + topic.slice(1) : msg.text.slice(0, 5) + \"...\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-message\",\n          onClick: () => handleHistoryClick(index) // Click event to scroll\n          ,\n          children: shortText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        onToggleHistory: () => setShowHistory(!showHistory)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          ref: el => messageRefs.current[index] = el,\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            components: {\n              h1: ({\n                children\n              }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  fontSize: '22px',\n                  color: '#ffffff',\n                  fontWeight: 'bold',\n                  marginBottom: '15px'\n                },\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 5\n              }, this),\n              h2: ({\n                children\n              }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  fontSize: '18px',\n                  color: '#ffffff',\n                  fontWeight: '600',\n                  marginBottom: '10px'\n                },\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 5\n              }, this),\n              p: ({\n                children\n              }) => /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#ffffff',\n                  marginBottom: '12px',\n                  lineHeight: '1.6'\n                },\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 5\n              }, this),\n              li: ({\n                children\n              }) => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  color: '#ffffff',\n                  marginLeft: '25px',\n                  marginBottom: '8px',\n                  lineHeight: '1.6'\n                },\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 5\n              }, this)\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), msg.rawData && /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"message-data\",\n            children: JSON.stringify(msg.rawData, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 5\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUserInput,\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Ask me anything...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"BxuVyjW7HKIIRDLn1tg1BSavc4A=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["nlp","React","useState","useEffect","useRef","useNavigate","ReactMarkdown","axios","Navbar","jsxDEV","_jsxDEV","API_URL","Chatbot","_s","messages","setMessages","userInput","setUserInput","showHistory","setShowHistory","messagesEndRef","messageRefs","navigate","token","localStorage","getItem","username","console","log","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","userId","storedMessages","JSON","parse","error","length","setItem","stringify","handleUserInput","e","preventDefault","trim","userMessage","text","sender","prev","res","post","query","data","botMessageText","message","Array","isArray","listResponse","map","item","join","friendlyResponse","botMessage","scrollToMessage","index","block","handleHistoryClick","response","ans","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","msg","self","findIndex","m","lower","toLowerCase","shortText","includes","doc","topic","nouns","out","verbs","split","slice","charAt","toUpperCase","onClick","onToggleHistory","ref","el","components","h1","style","fontSize","color","fontWeight","marginBottom","h2","p","lineHeight","li","marginLeft","rawData","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sairi/OneDrive/Desktop/miniproject implementation/frontend/src/components/Home.js"],"sourcesContent":["import nlp from 'compromise';//chat history topics\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ReactMarkdown from 'react-markdown';//text bold,etc\r\nimport axios from 'axios';//making API requests to your backend.\r\nimport './home.css';\r\nimport Navbar from './navbar';\r\n\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [showHistory, setShowHistory] = useState(false); // chathitory open or not\r\n    const messagesEndRef = useRef(null);//Ref to bottom of messages — used for scroll to bottom.\r\n    const messageRefs = useRef([]); \r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const username=localStorage.getItem(\"username\");\r\n    console.log(\"user name is\",username);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    // Scroll to the bottom whenever messages update\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n\r\nuseEffect(() => {\r\n        if (!token) {\r\n            navigate(\"/login\");\r\n        }\r\n    }, [token, navigate]);\r\n\r\n    // 🔹 Load chat history from localStorage when component mounts\r\n    const userId = localStorage.getItem(\"userEmail\") || \"guest\"; // Or however you store identity\r\n\r\n    useEffect(() => {\r\n    try {\r\n        const storedMessages = localStorage.getItem(`chatMessages_${userId}`);\r\n        if (storedMessages) {\r\n            setMessages(JSON.parse(storedMessages));\r\n        }\r\n    } catch (error) {\r\n        console.error(\"❌ Error loading chat history:\", error);\r\n    }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        if (messages.length > 0) {\r\n            localStorage.setItem(`chatMessages_${userId}`, JSON.stringify(messages));\r\n        }\r\n    }, [messages, userId]);\r\n\r\n\r\n    const handleUserInput = async (e) => {\r\n        e.preventDefault();\r\n        if (!userInput.trim()) return;\r\n\r\n        const userMessage = { text: userInput, sender: 'user' };\r\n        setMessages((prev) => [...prev, userMessage]);\r\n        setUserInput('');\r\n\r\n        try {\r\n            const res = await axios.post(`${API_URL}/chat`, { query: userInput });\r\n            console.log(\"📊 API Response:\", res.data);\r\n\r\n            let botMessageText = res.data.message || \"No response from the bot.\";\r\n\r\n            if (Array.isArray(res.data.listResponse)) {\r\n            // Convert response to bullet points\r\n            botMessageText = \"<ul>\" + res.data.listResponse.map(item => `<li>${item}</li>`).join('') + \"</ul>\";\r\n        }\r\n\r\n        \r\n        // Ensure we only show a user-friendly response, not JSON\r\n        if (res.data.friendlyResponse) {\r\n            botMessageText = res.data.friendlyResponse; // Use formatted response if available\r\n        }\r\n\r\n        const botMessage = {\r\n            text: botMessageText,\r\n            sender: 'bot'\r\n        };\r\n        setMessages((prev) => [...prev, botMessage]);\r\n\r\n    } catch (error) {\r\n        console.error(\"❌ Error communicating with chatbot:\", error);\r\n        setMessages((prev) => [...prev, { text: \"Oops! Something went wrong. Please try again.\", sender: 'bot' }]);\r\n    }\r\n};\r\n\r\n    const scrollToMessage = (index) => {\r\n        if (messageRefs.current[index]) {\r\n            messageRefs.current[index].scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"start\",  \r\n            });\r\n        }\r\n    };\r\n\r\n    const handleHistoryClick = (index) => {\r\n        scrollToMessage(index); // Scroll to the clicked message in the chat\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const response = async()=>{\r\n            const ans = await axios.get(`http://localhost:5000/chat-history/${username}`);\r\n            //setMessages(JSON.parse(ans));\r\n            console.log(\"answer is \",ans);\r\n            console.log(\"the answer issss\",ans.data)\r\n            }\r\n    })\r\n\r\n    return (\r\n        <div className={`chat-container ${showHistory ? \"history-open\" : \"\"}`}>\r\n            {/* Chat History Panel */}\r\n            <div className={`chat-history ${showHistory ? \"show\" : \"\"}`}>\r\n            <h3>Chat History</h3>\r\n        {messages\r\n    .filter((msg, index, self) =>\r\n        msg.sender === \"user\" &&\r\n        self.findIndex(m => m.text === msg.text && m.sender === \"user\") === index\r\n    )\r\n    .map((msg, index) => {\r\n        const lower = msg.text.toLowerCase();\r\n\r\n        // --- Manual Rules First ---\r\n        let shortText = \"\";\r\n        if (lower.includes(\"fee structure\") && lower.includes(\"it\")) shortText = \"Fee: IT\";\r\n        else if (lower.includes(\"fee structure\") && lower.includes(\"cs\")) shortText = \"Fee: CS\";\r\n        else if (lower.includes(\"fee structure\")) shortText = \"Fee Structure\";\r\n        else if (lower.includes(\"student\")) shortText = \"Student Info\";\r\n        else if (lower.includes(\"faculty\")) shortText = \"Faculty Info\";\r\n        else if (lower.includes(\"event\")) shortText = \"Event Info\";\r\n        else if (lower.includes(\"details\") && lower.includes(\"all\")) shortText = \"All Details\";\r\n\r\n        // --- If no match, use Compromise NLP fallback ---\r\n        if (!shortText) {\r\n        const doc = nlp(msg.text);\r\n        const topic = doc.nouns().out('text') || doc.verbs().out('text') || msg.text.split(\" \").slice(0, 4).join(\" \");\r\n        shortText = topic ? topic.charAt(0).toUpperCase() + topic.slice(1) : msg.text.slice(0, 5) + \"...\";\r\n        }\r\n\r\n        return (\r\n        <div key={index} className=\"history-message\"\r\n        onClick={() => handleHistoryClick(index)}  // Click event to scroll\r\n        >\r\n            {shortText}\r\n        </div>\r\n        );\r\n    })}\r\n    </div>\r\n\r\n\r\n            <div className=\"chat-title\">\r\n                <Navbar onToggleHistory={() => setShowHistory(!showHistory)}/>\r\n            </div>\r\n            {/* Main Chat Section */}\r\n            <div className=\"chat-box\">\r\n                <header className=\"chat-header\">\r\n                </header>\r\n\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.sender}`} ref={(el) => (messageRefs.current[index] = el)}>\r\n                            <ReactMarkdown \r\n    components={{\r\n  h1: ({ children }) => (\r\n    <h1 style={{ fontSize: '22px', color: '#ffffff', fontWeight: 'bold', marginBottom: '15px' }}>\r\n      {children}\r\n    </h1>\r\n  ),\r\n  h2: ({ children }) => (\r\n    <h2 style={{ fontSize: '18px', color: '#ffffff', fontWeight: '600', marginBottom: '10px' }}>\r\n      {children}\r\n    </h2>\r\n  ),\r\n  p: ({ children }) => (\r\n    <p style={{ color: '#ffffff', marginBottom: '12px', lineHeight: '1.6' }}>\r\n      {children}\r\n    </p>\r\n  ),\r\n  li: ({ children }) => (\r\n    <li style={{ color: '#ffffff', marginLeft: '25px', marginBottom: '8px', lineHeight: '1.6' }}>\r\n      {children}\r\n    </li>\r\n  )\r\n}}\r\n\r\n>\r\n    {msg.text}\r\n</ReactMarkdown>\r\n\r\n{msg.rawData && (\r\n    <pre className=\"message-data\">{JSON.stringify(msg.rawData, null, 2)}</pre>\r\n)}\r\n</div>\r\n))}\r\n<div ref={messagesEndRef}></div>\r\n</div>\r\n\r\n<form onSubmit={handleUserInput} className=\"chat-input\">\r\n<input\r\ntype=\"text\"\r\nvalue={userInput}\r\nonChange={(e) => setUserInput(e.target.value)}\r\nplaceholder=\"Ask me anything...\"\r\n/>\r\n<button type=\"submit\">Send</button>\r\n</form>\r\n</div>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}